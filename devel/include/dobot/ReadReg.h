// Generated by gencpp from file dobot/ReadReg.msg
// DO NOT EDIT!


#ifndef DOBOT_MESSAGE_READREG_H
#define DOBOT_MESSAGE_READREG_H

#include <ros/service_traits.h>


#include <dobot/ReadRegRequest.h>
#include <dobot/ReadRegResponse.h>


namespace dobot
{

struct ReadReg
{

typedef ReadRegRequest Request;
typedef ReadRegResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadReg
} // namespace dobot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dobot::ReadReg > {
  static const char* value()
  {
    return "bc6fd90ab0bfe4afd7a1535702e29a89";
  }

  static const char* value(const ::dobot::ReadReg&) { return value(); }
};

template<>
struct DataType< ::dobot::ReadReg > {
  static const char* value()
  {
    return "dobot/ReadReg";
  }

  static const char* value(const ::dobot::ReadReg&) { return value(); }
};


// service_traits::MD5Sum< ::dobot::ReadRegRequest> should match 
// service_traits::MD5Sum< ::dobot::ReadReg > 
template<>
struct MD5Sum< ::dobot::ReadRegRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dobot::ReadReg >::value();
  }
  static const char* value(const ::dobot::ReadRegRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dobot::ReadRegRequest> should match 
// service_traits::DataType< ::dobot::ReadReg > 
template<>
struct DataType< ::dobot::ReadRegRequest>
{
  static const char* value()
  {
    return DataType< ::dobot::ReadReg >::value();
  }
  static const char* value(const ::dobot::ReadRegRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dobot::ReadRegResponse> should match 
// service_traits::MD5Sum< ::dobot::ReadReg > 
template<>
struct MD5Sum< ::dobot::ReadRegResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dobot::ReadReg >::value();
  }
  static const char* value(const ::dobot::ReadRegResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dobot::ReadRegResponse> should match 
// service_traits::DataType< ::dobot::ReadReg > 
template<>
struct DataType< ::dobot::ReadRegResponse>
{
  static const char* value()
  {
    return DataType< ::dobot::ReadReg >::value();
  }
  static const char* value(const ::dobot::ReadRegResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DOBOT_MESSAGE_READREG_H
