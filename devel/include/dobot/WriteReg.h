// Generated by gencpp from file dobot/WriteReg.msg
// DO NOT EDIT!


#ifndef DOBOT_MESSAGE_WRITEREG_H
#define DOBOT_MESSAGE_WRITEREG_H

#include <ros/service_traits.h>


#include <dobot/WriteRegRequest.h>
#include <dobot/WriteRegResponse.h>


namespace dobot
{

struct WriteReg
{

typedef WriteRegRequest Request;
typedef WriteRegResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct WriteReg
} // namespace dobot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dobot::WriteReg > {
  static const char* value()
  {
    return "8da6b8e45a4090c0598ec46e5e2d31dc";
  }

  static const char* value(const ::dobot::WriteReg&) { return value(); }
};

template<>
struct DataType< ::dobot::WriteReg > {
  static const char* value()
  {
    return "dobot/WriteReg";
  }

  static const char* value(const ::dobot::WriteReg&) { return value(); }
};


// service_traits::MD5Sum< ::dobot::WriteRegRequest> should match 
// service_traits::MD5Sum< ::dobot::WriteReg > 
template<>
struct MD5Sum< ::dobot::WriteRegRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dobot::WriteReg >::value();
  }
  static const char* value(const ::dobot::WriteRegRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dobot::WriteRegRequest> should match 
// service_traits::DataType< ::dobot::WriteReg > 
template<>
struct DataType< ::dobot::WriteRegRequest>
{
  static const char* value()
  {
    return DataType< ::dobot::WriteReg >::value();
  }
  static const char* value(const ::dobot::WriteRegRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dobot::WriteRegResponse> should match 
// service_traits::MD5Sum< ::dobot::WriteReg > 
template<>
struct MD5Sum< ::dobot::WriteRegResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dobot::WriteReg >::value();
  }
  static const char* value(const ::dobot::WriteRegResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dobot::WriteRegResponse> should match 
// service_traits::DataType< ::dobot::WriteReg > 
template<>
struct DataType< ::dobot::WriteRegResponse>
{
  static const char* value()
  {
    return DataType< ::dobot::WriteReg >::value();
  }
  static const char* value(const ::dobot::WriteRegResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DOBOT_MESSAGE_WRITEREG_H
